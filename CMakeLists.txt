#
# project: MOWDISTRIBUTE
#
cmake_minimum_required(VERSION 2.8)
if (ENABLE_UBSAN)
	add_compile_options( -fsanitize=undefined )
	add_link_options( -fsanitize=undefined )
endif()
if (ENABLE_MSAN)
	add_compile_options( -fsanitize=memory -fsanitize-memory-track-origins=2 -fno-omit-frame-pointer -fsanitize-memory-use-after-dtor )
	add_link_options( -fsanitize=memory -fsanitize-memory-track-origins=2 -fno-omit-frame-pointer -fsanitize-memory-use-after-dtor )
endif()
if (ENABLE_TSAN)
	add_compile_options( -fsanitize=thread )
	add_link_options( -fsanitize=thread )
endif()
if (ENABLE_LSAN)
	add_compile_options( -fsanitize=leak )
	add_link_options( -fsanitize=leak )
endif()
if (ENABLE_ASAN)
	add_compile_options( -fsanitize=address -fno-omit-frame-pointer )
	add_link_options( -fsanitize=address -fno-omit-frame-pointer )
endif()
if (ENABLE_ALSAN)
   	add_compile_options( -fsanitize=address )
	add_link_options( -fsanitize=address )
#	ASAN_OPTIONS=detect_leaks=1
endif()
# include the fips main cmake file
get_filename_component(FIPS_ROOT_DIR "../fips" ABSOLUTE)
include("${FIPS_ROOT_DIR}/cmake/fips.cmake")

# include_directories(src)

fips_setup(PROJECT MOWDISTRIBUTE)
fips_project(mowdistribute)
fips_begin_app(mowdistribute cmdline)
fips_vs_warning_level(4)
if (FIPS_MSVC)
        add_definitions(-D_CRT_SECURE_NO_WARNINGS)
endif()
if(FIPS_EMSCRIPTEN)
        add_definitions(-s FORCE_FILESYSTEM=1)
endif()
fips_files(mowdistribute.c mowdistribute.h)
fips_dir(MOWFILE)
	fips_files(mowfile.h)
fips_dir(MOWSOCKET)
if (FIPS_ANDROID)
	set(CMAKE_POSITION_INDEPENDENT_CODE ON)
	fips_files( mowsocket.h ifaddrs-android.h ifaddrs-android.c)
else()
	fips_files(mowsocket.h)
endif()
fips_dir(MOWTHREAD)
	fips_files(mowthread.h)
fips_dir(xxHash)
	fips_files(xxhash.h)
if (FIPS_ANDROID)
        fips_dir(android)
        fips_files(android_native_app_glue.h android_native_app_glue.c)
        fips_libs(android log)
endif()

set(args)
if (FIPS_CLANG)
	add_definitions(-Wno-error -mavx -maes)
	set(args -Wno-unused-function -Wno-unused-private-field -Wno-dangling-else -Wno-unused-value -Wno-parentheses -Wno-sign-compare -Wno-deprecated-register -Wno-reorder -Wno-unused-variable)
elseif (FIPS_GCC)
option(NO_AES "Explicitly disable AES support" ${NO_AES})
if(NO_AES)
	message(STATUS "AES support explicitly disabled")
	add_definitions(-DAES=1)
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DAES=1")
	add_definitions(-Wno-error -mavx -maes)
else()
	message(STATUS "NO_AES1")
endif()
	set(args -Wno-unused-function -Wno-missing-braces -Wno-unused-value -Wno-parentheses -Wno-sign-compare -Wno-unused-variable -Wno-reorder -Wno-delete-non-virtual-dtor -Wno-maybe-uninitialized -Wno-unused-but-set-variable -Wno-unused-result)
elseif (FIPS_WINDOWS)
	add_definitions(-D_CRT_SECURE_NO_WARNINGS -WX-)
	add_definitions(-DAES=1)
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DAES=1")
	add_definitions(-mavx -maes)
	# 4814: he file contains a character that cannot be represented in the current code page...
	#set(args /wd4819)
	#set(args -Wx- -Wno-unused-function)
endif()

fips_end_app()
fips_finish()
